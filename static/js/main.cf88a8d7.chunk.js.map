{"version":3,"sources":["Components/Slider.js","Components/View/Portrait.js","Components/View/LegendState.js","Components/View/Info.js","Components/View/index.js","Components/Spinner.js","Components/Modal.js","Components/Canvas/draw.js","Utils/isMobile.js","Components/Canvas/preload.js","Components/Canvas/setup.js","Components/Canvas/index.js","Components/Main.js","App.js","index.js"],"names":["Container","styled","div","PrettoSlider","withStyles","root","color","height","thumb","width","backgroundColor","border","marginTop","marginLeft","boxShadow","active","valueLabel","left","fontFamily","track","borderRadius","rail","Slider","Component","props","useState","value","setValue","useEffect","setYear","step","valueLabelDisplay","max","min","onChange","e","val","cursorPointer","noBackground","Portrait","img","SeeMoreLabel","entry","hasWiki","wiki","hasImage","src","alt","title","name","onClick","Color","Label","getColor","colorName","foundColor","colors","filter","c","state","alphabet","nameCir","Legend","Bottom","Name","Title","Section","SubSection","setModalSrc","year","states","map","i","LegendState","image","style","titleCir","marginBottom","textAlign","justifyContent","flag","setEntry","findEntry","data","length","startYear","Info","SpinnerWrapper","StyledSpinner","svg","Spinner","this","size","viewBox","xmlns","x1","y1","x2","y2","id","stopColor","stopOpacity","offset","fill","fillRule","transform","d","stroke","strokeWidth","attributeName","type","from","to","dur","repeatCount","cx","cy","r","React","isClosing","Wrapper","Modal","iframe","CloseButton","setIsClosing","startClosing","onAnimationEnd","onClose","stopPropagation","p5","drawBorders","shouldDraw","clear","territory","territories","findTerritory","countries","specials","drawCountry","forEach","s","specialColor","Number","isInteger","special","country","coordinates","strokeWeight","noStroke","beginShape","coordinate","lng","lat","pos","myMap","latLngToPixel","vertex","x","y","endShape","draw","p","frameRate","isMobile","initializeValues","loadGoogleFont","link","document","createElement","href","replace","rel","head","appendChild","preload","key","require","token","options","zoom","studio","setup","mappa","Mappa","canvas","createCanvas","window","innerWidth","innerHeight","tileMap","overlay","setTimeout","inertia","maxZoom","minZoom","textFont","Loader","sketch","windowResized","resizeCanvas","remove","console","log","canv","querySelector","removeCanvas","SubWrapper","AlphabetSelect","Disclaimer","Main","modalSrc","setAlphabet","Canvas","View","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cf88a8d7.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Slider } from '@material-ui/core';\r\nimport data from '../Data/serbia.json'\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    height: 10vh;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin: 0 auto;\r\n\r\n    padding: 0 24px;\r\n    pointer-events: auto;\r\n`;\r\n\r\nconst PrettoSlider = withStyles({\r\n    root: {\r\n      color: 'rgba(255, 0, 0, 0.5)',\r\n      height: 8,\r\n      \r\n      \r\n    },\r\n    thumb: {\r\n      height: 24,\r\n      width: 24,\r\n      backgroundColor: '#fff',\r\n      border: '2px solid currentColor',\r\n      marginTop: -8,\r\n      marginLeft: -12,\r\n      '&:focus, &:hover, &$active': {\r\n        boxShadow: 'inherit',\r\n      },\r\n      boxShadow: `0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23)`\r\n    },\r\n    active: {},\r\n    valueLabel: {\r\n      left: 'calc(-50% + 4px)',\r\n      fontFamily: `Cuprum`\r\n    },\r\n    track: {\r\n      height: 8,\r\n      borderRadius: 4,\r\n      boxShadow: `0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23)`\r\n    },\r\n    rail: {\r\n      height: 8,\r\n      borderRadius: 4,\r\n      boxShadow: `0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23)`\r\n    },\r\n  })(Slider);\r\n\r\n\r\nconst Component = (props) => {\r\n    const [value, setValue] = useState(780);\r\n\r\n    useEffect(() => {\r\n\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        props.setYear(value);\r\n    }, [value])\r\n\r\n    return (\r\n        <Container>\r\n            <PrettoSlider\r\n                value={value}\r\n                step={1}\r\n                valueLabelDisplay=\"on\"\r\n                max={2021}\r\n                min={780}\r\n                onChange={(e, val) => setValue(val)}\r\n            />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Component;","import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport MenuBookIcon from '@material-ui/icons/MenuBook'\r\n\r\nconst Container = styled.div`\r\n    position: relative;\r\n    width: 120px;\r\n    height: 150px;\r\n    pointer-events: auto;\r\n    border-radius: 4px;\r\n\r\n    background-color: #F1F1F1;\r\n    \r\n    -webkit-tap-highlight-color: transparent;\r\n    -webkit-filter: drop-shadow(0 3px 6px rgba(0,0,0,0.23));\r\n\r\n    @media(max-width: 720px){\r\n        width: 80px;\r\n        height: 100px;\r\n    }\r\n\r\n    ${props => props.cursorPointer && `\r\n        cursor: pointer;\r\n    `}\r\n\r\n    ${props => props.noBackground && `\r\n        background-color: transparent;\r\n    `}\r\n`;\r\n\r\nconst Portrait = styled.img`\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n    border-radius: 4px;\r\n    user-drag: none;\r\n`;\r\n\r\nconst SeeMoreLabel = styled.div`\r\n    position: absolute;\r\n    right: 4px;\r\n    bottom: 4px;\r\n    \r\n    background: rgba(0, 0, 0, 0.75);\r\n    border-radius: 4px;\r\n    color: #FFFFFF;\r\n    padding: 2px 8px;\r\n    text-decoration: underline;\r\n\r\n    user-select: none;\r\n\r\n    svg{\r\n        font-size: 24px;\r\n    }\r\n\r\n    @media(max-width: 720px){\r\n        svg{\r\n            font-size: 18px;\r\n        }\r\n    }\r\n`;\r\n\r\nconst Component = (props) => {\r\n    const { entry } = props;\r\n\r\n    const hasWiki = entry && entry.wiki && entry.wiki !== \"\";\r\n    const hasImage = props.src && props.src !== \"\";\r\n    const alt = entry ? `${entry.title} ${entry.name}` : \"istorija srbije\";\r\n\r\n    return (\r\n        <Container\r\n            noBackground={props.noBackground}\r\n            onClick={props.onClick}\r\n            cursorPointer={hasWiki}\r\n        >\r\n            {hasImage &&\r\n                <Portrait\r\n                    src={props.src}\r\n                    alt={alt}\r\n                />\r\n            }\r\n            {hasWiki &&\r\n                <SeeMoreLabel>\r\n                    <MenuBookIcon />\r\n                </SeeMoreLabel>\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Component;","import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport colors from '../../Data/colors.json'\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-bottom: 10px;\r\n\r\n`;\r\n\r\nconst Color = styled.div`\r\n    border-radius: 4px;\r\n    width: 32px;\r\n    height: 32px;\r\n    background-color: ${props => props.color};\r\n\r\n`;\r\n\r\nconst Label = styled.div`\r\n    color: #FFFFFF;\r\n    font-size: 26px;\r\n    font-weight: normal;\r\n    margin-left: 8px;\r\n\r\n    @media(max-width: 720px){\r\n        font-size: 16px;\r\n    }\r\n`;\r\n\r\n\r\nconst getColor = (colorName = \"serbia\") => {\r\n    const foundColor = colors.filter(c => c.name === colorName)[0];\r\n    return foundColor ? foundColor.color : \"rgba(255, 0, 0, 0.5)\";\r\n}\r\n\r\nconst Component = (props) => {\r\n\r\n    const { state, alphabet } = props;\r\n\r\n    return (\r\n        <Container>\r\n            <Color\r\n                color={getColor(state.color)}\r\n            />\r\n            <Label>\r\n                {alphabet === 'cirilica' && state.nameCir ? state.nameCir : state.name}\r\n            </Label>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Component;","import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport Portrait from './Portrait'\r\nimport LegendState from './LegendState'\r\n\r\nconst Container = styled.div`\r\n    \r\n    bottom: 0;\r\n    width: 100vmin;\r\n    color: #FFFFFF;\r\n    -webkit-filter: drop-shadow(0 3px 2px rgba(0,0,0,0.23));\r\n`;\r\n\r\nconst Legend = styled.div`\r\n\r\n`;\r\n\r\nconst Bottom = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    text-align: center;\r\n`;\r\n\r\nconst Name = styled.div`\r\n    font-size: 42px;\r\n    font-weight: bold;\r\n\r\n    @media(max-width: 720px){\r\n        font-size: 26px;\r\n    }\r\n\r\n    @media(max-width: 330px){\r\n        font-size: 18px;\r\n    }\r\n`;\r\n\r\nconst Title = styled(Name)`\r\n    font-size: 26px;\r\n    font-weight: normal;\r\n\r\n    @media(max-width: 720px){\r\n        font-size: 16px;\r\n    }\r\n`;\r\n\r\nconst Year = styled(Name)`\r\n    font-size: 32px;\r\n    font-weight: normal;\r\n\r\n    @media(max-width: 720px){\r\n        font-size: 26px;\r\n    }\r\n`;\r\n\r\nconst Section = styled.div`\r\n    display: flex;\r\n`;\r\n\r\nconst SubSection = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    text-align: left;\r\n`;\r\n\r\nconst Component = (props) => {\r\n    const {\r\n        entry,\r\n        year,\r\n        setModalSrc,\r\n        alphabet\r\n    } = props;\r\n\r\n    return (\r\n        <Container>\r\n            <Legend>\r\n                {entry.states.map((state, i) => {\r\n                    return (\r\n                        <LegendState\r\n                            key={i}\r\n                            state={state}\r\n                            alphabet={alphabet}\r\n                        />\r\n                    )\r\n                })}\r\n            </Legend>\r\n\r\n            <Bottom>\r\n                <Section>\r\n                    <Portrait\r\n                        onClick={() => setModalSrc(entry.wiki)}\r\n                        src={entry.image}\r\n                        entry={entry}\r\n                    />\r\n                    <SubSection\r\n                        style={{ marginLeft: `14px` }}\r\n                    >\r\n                        <div>\r\n                            <Title>\r\n                                {alphabet === \"cirilica\" && entry.titleCir ? entry.titleCir : entry.title}\r\n                            </Title>\r\n\r\n                            <Name\r\n                                style={{\r\n                                    marginBottom: `10px`\r\n                                }}\r\n                            >\r\n                                {alphabet === \"cirilica\" && entry.nameCir ? entry.nameCir : entry.name}\r\n                            </Name>\r\n                        </div>\r\n                        {false &&\r\n                            <Year>\r\n                                {`${year}.`}\r\n                            </Year>\r\n                        }\r\n                    </SubSection>\r\n                </Section>\r\n\r\n\r\n                <Section>\r\n                    <SubSection\r\n                        style={{ textAlign: `center`, justifyContent: `flex-end` }}\r\n                    >\r\n                        <Portrait\r\n                            src={entry.flag}\r\n                            noBackground\r\n                        />\r\n                    </SubSection>\r\n                </Section>\r\n            </Bottom>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Component;","import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport data from '../../Data/serbia.json'\r\nimport Portrait from './Portrait'\r\nimport Info from './Info'\r\n\r\n\r\nconst Container = styled.div`\r\n    width: 100vmin;\r\n    padding: 16px 24px;\r\n    padding-top: 32px;\r\n    display: flex;\r\n    pointer-events: none;\r\n`;\r\n\r\nconst Component = (props) => {\r\n\r\n    const [entry, setEntry] = useState(null);\r\n\r\n    useEffect(() => {\r\n        findEntry(props.year);\r\n    }, [props.year]);\r\n\r\n    const findEntry = (year) => {\r\n        for (let i = data.length - 1; i >= 0; i--) {\r\n            if (data[i].startYear <= year) {\r\n                setEntry(data[i]);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    if (!entry) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Info\r\n                entry={entry}\r\n                year={props.year}\r\n                setModalSrc={props.setModalSrc}\r\n                alphabet={props.alphabet}\r\n            />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Component;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst SpinnerWrapper = styled.div`\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 50%;\r\n    width: 100%;\r\n    height: 100%;\r\n    transform: translate(-50%, -50%);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    pointer-events: none;\r\n\r\n    svg{\r\n        animation: fade-in 1s ease;\r\n    }\r\n`;\r\n\r\nconst StyledSpinner = styled.svg`\r\n`;\r\n\r\nclass Spinner extends React.Component {\r\n    render() {\r\n        const color = this.props.color || \"#FFFFFF\";\r\n        const size = this.props.size || 34;\r\n\r\n        return (\r\n            <SpinnerWrapper\r\n                style={this.props.style}\r\n            >\r\n                <StyledSpinner width={size} height={size} viewBox={`0 0 38 38`} xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <defs>\r\n                        <linearGradient x1=\"8.042%\" y1=\"0%\" x2=\"65.682%\" y2=\"23.865%\" id=\"a\">\r\n                            <stop stopColor={color} stopOpacity=\"0\" offset=\"0%\" />\r\n                            <stop stopColor={color} stopOpacity=\".631\" offset=\"63.146%\" />\r\n                            <stop stopColor={color} offset=\"100%\" />\r\n                        </linearGradient>\r\n                    </defs>\r\n                    <g fill=\"none\" fillRule=\"evenodd\">\r\n                        <g transform=\"translate(1 1)\">\r\n                            <path d=\"M36 18c0-9.94-8.06-18-18-18\" id=\"Oval-2\" stroke=\"url(#a)\" strokeWidth=\"2\">\r\n                                <animateTransform attributeName=\"transform\" type=\"rotate\" from=\"0 18 18\" to=\"360 18 18\"\r\n                                    dur=\"0.9s\" repeatCount=\"indefinite\" />\r\n                            </path>\r\n                            <circle fill={color} cx=\"36\" cy=\"18\" r=\"1\">\r\n                                <animateTransform attributeName=\"transform\" type=\"rotate\" from=\"0 18 18\" to=\"360 18 18\"\r\n                                    dur=\"0.9s\" repeatCount=\"indefinite\" />\r\n                            </circle>\r\n                        </g>\r\n                    </g>\r\n                </StyledSpinner>\r\n            </SpinnerWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Spinner;","import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport Spinner from './Spinner'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\n\r\nconst Container = styled.div`\r\n    position: absolute;\r\n    left: 0;\r\n    bottom: 0;\r\n    max-width: 100vw;\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: 10;\r\n    animation: fade-in 0.5s ease;\r\n    background: rgba(0, 0, 0, 0.75);\r\n\r\n    ${props => props.isClosing && `\r\n        animation: fade-out 0.25s ease both;\r\n    `}\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 50%;\r\n    width: 100%;\r\n    max-width: 100vmin;\r\n    height: 75%;\r\n    animation: slide-in-bottom 0.5s 0.25s ease both;\r\n    background: black;\r\n    border-radius: 30px 30px 0 0;\r\n    box-shadow: 0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);\r\n\r\n    ${props => props.isClosing && `\r\n        animation: slide-out-bottom 0.25s ease both;\r\n    `}\r\n\r\n    transform: translateX(-50%);\r\n`;\r\n\r\nconst Modal = styled.iframe`\r\n    width: 100%;\r\n    height: 100%;\r\n    position: absolute;\r\n    top: 0;\r\n    border-radius: 30px 30px 0 0;\r\n    border: 0;\r\n`;\r\n\r\nconst CloseButton = styled.div`\r\n    position: absolute;\r\n    height: 30px;\r\n    width: 100%;\r\n    top: -45px;\r\n    padding-right: 15px;\r\n    text-align: right;\r\n    cursor: pointer;\r\n   \r\n    svg{\r\n        font-size: 32px;\r\n        color: #FFFFFF;\r\n    }\r\n`;\r\n\r\n\r\nconst Component = (props) => {\r\n    const [isClosing, setIsClosing] = useState(false);\r\n\r\n    const startClosing = () => {\r\n        setIsClosing(true);\r\n    }\r\n\r\n    return (\r\n        <Container\r\n            onClick={startClosing}\r\n            onAnimationEnd={() => {\r\n                if (isClosing) {\r\n                    props.onClose();\r\n                }\r\n            }}\r\n            isClosing={isClosing}\r\n        >\r\n            <Wrapper\r\n                onClick={(e) => { e.stopPropagation() }}\r\n                isClosing={isClosing}\r\n            >\r\n                <Spinner\r\n\r\n                />\r\n                {\r\n                    <Modal\r\n                        src={props.src}\r\n                    />\r\n                }\r\n\r\n                <CloseButton\r\n                    onClick={startClosing}\r\n                >\r\n                    <CloseIcon />\r\n                </CloseButton>\r\n            </Wrapper>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Component;","import territories from '../../Data/territories.json'\r\nimport special from '../../Data/Territories/special.json'\r\nimport colors from '../../Data/colors.json'\r\n\r\nlet p5 = null;\r\n\r\nconst findTerritory = (year) => {\r\n    for (let i = territories.length - 1; i >= 0; i--) {\r\n        if (territories[i].year <= year) {\r\n            return territories[i]\r\n        }\r\n    }\r\n\r\n    return [];\r\n}\r\n\r\nconst draw = (p) => {\r\n    p5 = p;\r\n    if (!p.frameRate() || p.frameRate() < 2) return;\r\n\r\n\r\n    drawBorders(p5.year);\r\n\r\n}\r\n\r\nconst drawBorders = (year) => {\r\n    if (!p5.shouldDraw) return;\r\n\r\n    p5.clear();\r\n    const territory = findTerritory(year);\r\n\r\n    if (territory.countries.length === 0 && (!territory.specials || territory.specials.length === 0)) return;\r\n\r\n    drawCountry(territory.countries);\r\n\r\n    const specials = territory.specials || [];\r\n\r\n\r\n    specials.forEach(s => {\r\n        const color = territory.specialColor && Number.isInteger(s) ? territory.specialColor : null;\r\n        drawCountry(special.filter(i => i.id === s), color);\r\n        //drawCountry(special.filter(i => i.id));\r\n    });\r\n\r\n\r\n    p5.shouldDraw = false;\r\n}\r\n\r\nconst drawCountry = (c, color) => {\r\n    c.forEach(country => {\r\n        const coordinates = country.coordinates;\r\n\r\n        p5.fill(color ? getColor(color) : getColor(country.color));\r\n        p5.stroke(\"rgba(0, 0, 0, 0.25)\");\r\n        p5.strokeWeight(0.5);\r\n        p5.noStroke();\r\n\r\n        p5.beginShape();\r\n\r\n        coordinates.forEach(coordinate => {\r\n            const lng = coordinate[0];\r\n            const lat = coordinate[1];\r\n            const pos = p5.myMap.latLngToPixel(lat, lng);\r\n            p5.vertex(pos.x, pos.y);\r\n        });\r\n\r\n        p5.endShape();\r\n    });\r\n}\r\n\r\nconst getColor = (colorName = \"serbia\") => {\r\n    const foundColor = colors.filter(c => c.name === colorName)[0];\r\n\r\n    return foundColor ? foundColor.color : \"rgba(255, 0, 0, 0.5)\";\r\n}\r\n\r\nexport default draw;","const isMobile = () => /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) || isIpadOS();\r\n\r\n\r\nfunction isIpadOS() {\r\n    return navigator.maxTouchPoints &&\r\n        navigator.maxTouchPoints > 2 &&\r\n        /MacIntel/.test(navigator.platform);\r\n}\r\n\r\n\r\nexport default isMobile;\r\n","import isMobile from '../../Utils/isMobile'\r\n\r\nlet p5 = null;\r\n\r\nconst preload = (p) => {\r\n    p5 = p;\r\n\r\n    initializeValues();\r\n\r\n    loadGoogleFont(\"Cuprum\");\r\n\r\n}\r\n\r\nconst initializeValues = () => {\r\n   p5.shouldDraw = true;\r\n}\r\n\r\nconst loadGoogleFont = (fontFamily) => {\r\n    const link = document.createElement('link');\r\n    link.href = `https://fonts.googleapis.com/css?family=${fontFamily.replace(\" \", \"+\")}`;\r\n    link.rel = 'stylesheet';\r\n    document.head.appendChild(link);\r\n    p5.fontFamily = fontFamily;\r\n}\r\n\r\nexport default preload;","\r\nimport Mappa from 'mappa-mundi'\r\n\r\n\r\nconst key = require('../../token.json').token;\r\n\r\nlet p5 = null;\r\n\r\nconst options = {\r\n    lat: 42.52069952914966,\r\n    lng: 20.76416015625,\r\n    zoom: 6,\r\n    studio: true,\r\n    style: 'mapbox://styles/markof94/cklmxeagq0d7i17t62ir9ejrp'\r\n};\r\n\r\nconst setup = (p) => {\r\n    p5 = p;\r\n\r\n    const mappa = new Mappa('Mapbox', key);\r\n    const canvas = p.createCanvas(window.innerWidth, window.innerHeight);\r\n\r\n    if (!window.myMap) {\r\n        window.myMap = mappa.tileMap(options);\r\n        window.myMap.overlay(canvas);\r\n        setTimeout(() => {\r\n            window.myMap.map.options.inertia = false;\r\n            window.myMap.map.options.maxZoom = 7;\r\n            window.myMap.map.options.minZoom = 4;\r\n        }, 500)\r\n    }\r\n\r\n    \r\n    p.myMap = window.myMap;\r\n    p.myMap.onChange(() => p.shouldDraw = true);\r\n\r\n\r\n    p.textFont(p.fontFamily);\r\n}\r\n\r\nexport default setup;","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport draw from './draw';\r\nimport preload from './preload'\r\nimport setup from './setup';\r\nimport Spinner from '../Spinner'\r\nimport p5 from 'p5/lib/p5'\r\n\r\nconst Container = styled.div`\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 0;\r\n    transform: translateX(-50%);\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: hidden;\r\n    animation: fade-in 0.5s ease;\r\n    z-index: 0;\r\n    user-drag: none;\r\n`;\r\n\r\nconst Loader = styled.div`\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    color: white;\r\n`;\r\n\r\nconst windowResized = (game) => {\r\n    game.resizeCanvas(window.innerWidth, window.innerHeight);\r\n}\r\n\r\nconst sketch = p => {\r\n    p.draw = null;\r\n\r\n    p.preload = () => { preload(p) }\r\n    p.setup = () => { setup(p) }\r\n    p.draw = () => { draw(p) }\r\n    p.windowResized = () => { windowResized(p) }\r\n}\r\n\r\nlet p = null;\r\n\r\nconst initCanvas = () => {\r\n    p = new p5(sketch, 'p5game');\r\n\r\n}\r\n\r\nconst removeCanvas = () => {\r\n    if (p) {\r\n        p.remove();\r\n        p = window.setup = window.draw = null;\r\n        console.log('as')\r\n    } else {\r\n        const canv = document.querySelector('canvas');\r\n        canv && canv.remove();\r\n    }\r\n}\r\n\r\nconst Component = (props) => {\r\n    useEffect(() => {\r\n        initCanvas();\r\n\r\n        return (() => {\r\n            removeCanvas();\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (p) {\r\n            p.year = props.year;\r\n            p.shouldDraw = true;\r\n        }\r\n    }, [props.year])\r\n\r\n    return (\r\n        <Container>\r\n            <div id={'p5game'} />\r\n            <Loader id={\"p5_loading\"}><Spinner /> </Loader>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport { p };\r\nexport default Component;","import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport Slider from './Slider'\r\nimport View from './View'\r\nimport Modal from './Modal'\r\nimport Canvas from './Canvas'\r\n\r\nconst Container = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n    max-width: 100vw;\r\n    height: 100vh;\r\n    margin: 0 auto;\r\n    \r\n    display: flex;\r\n    align-items: flex-end;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n    z-index: 1;\r\n    background: rgba(0, 0, 0, 0.75);\r\n    pointer-events: none;\r\n    padding-top: 24px;\r\n    background: linear-gradient(0, rgba(0, 0, 0, 0.6) 10%, rgba(0, 0, 0, 0.35) 75%, rgba(0, 0, 0, 0) 100%);\r\n    width: 100%;\r\n`;\r\nconst SubWrapper = styled.div`\r\n    max-width: 100vmin;\r\n    margin: 0 auto;\r\n\r\n    @media(max-width: 720px){\r\n        padding-bottom: 16px;\r\n    }\r\n`;\r\n\r\nconst AlphabetSelect = styled.div`\r\n    position: absolute;\r\n    right: 8px;\r\n    top: 8px;\r\n    cursor: pointer;\r\n    font-size: 14px;\r\n    color: #FFFFFF;\r\n    background: rgba(0, 0, 0, 0.5);\r\n    border-radius: 5px;\r\n    padding: 4px 8px;\r\n    user-select: none;\r\n    min-width: 75px;\r\n    -webkit-tap-highlight-color: transparent;\r\n    text-align: center;\r\n\r\n    &:hover{\r\n        text-decoration: underline;\r\n    }\r\n`;\r\n\r\nconst Disclaimer = styled.div`\r\n    position: absolute;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    bottom: 4px;\r\n    padding: 0 24px;\r\n    width: 100vmin;\r\n    text-align: center;\r\n\r\n    \r\n    color: rgba(255, 255, 255, 0.25);\r\n    font-size: 12px;\r\n    z-index: 2;\r\n\r\n    @media(max-width: 720px){\r\n        font-size: 11px;\r\n    }\r\n`;\r\n\r\nconst Main = () => {\r\n    const [year, setYear] = useState(780);\r\n    const [modalSrc, setModalSrc] = useState('');\r\n    const [alphabet, setAlphabet] = useState('cirilica');\r\n\r\n    useEffect(() => {\r\n\r\n    }, []);\r\n\r\n    const toggleAlphabet = () => {\r\n        if (alphabet === 'cirilica') {\r\n            setAlphabet('latinica');\r\n        } else {\r\n            setAlphabet('cirilica');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Canvas\r\n                year={year}\r\n            />\r\n\r\n            <Wrapper>\r\n                <SubWrapper>\r\n                    <View\r\n                        year={year}\r\n                        setModalSrc={setModalSrc}\r\n                        alphabet={alphabet}\r\n                    />\r\n\r\n                    <Slider\r\n                        setYear={(y) => setYear(y)}\r\n                    />\r\n                </SubWrapper>\r\n            </Wrapper>\r\n\r\n            <AlphabetSelect\r\n                onClick={toggleAlphabet}\r\n            >\r\n                {alphabet === 'latinica' ? \"Ћирилица\" : \"Latinica\"}\r\n            </AlphabetSelect>\r\n\r\n            <Disclaimer>\r\n                {`Prikazane granice su samo informativnog karaktera i one mogu odstupati od zvanično prihvaćenih granica.`}\r\n            </Disclaimer>\r\n\r\n            {modalSrc !== \"\" &&\r\n                <Modal\r\n                    onClose={() => setModalSrc(``)}\r\n                    src={modalSrc}\r\n                />\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Main;","import Main from './Components/Main'\r\n\r\nconst App = () => {\r\n  return (\r\n    <Main />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles.css';\r\nimport './animations.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}